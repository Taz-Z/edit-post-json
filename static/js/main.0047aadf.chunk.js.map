{"version":3,"sources":["App.js","index.js"],"names":["App","useState","jsonVal","setJsonVal","isLoading","setIsLoading","hasError","setHasError","isSetup","setIsSetup","useEffect","queryParams","URLSearchParams","window","location","search","get","data","jsonString","Buffer","from","JSON","parse","e","alert","sendRequest","params","request","XMLHttpRequest","open","process","setRequestHeader","send","stringify","size","centered","show","onHide","Header","Title","id","rel","href","integrity","crossOrigin","bg","variant","sticky","Brand","alt","src","width","height","className","style","paddingBottom","value","onChange","fixed","onClick","f","i","t","staticParams","length","mainKey","Object","keys","jsons","vals","entries","divisor","Math","ceil","interval","floor","messageCount","j","k","v","z","content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAyLeA,IAnLH,WACV,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAExD,GADcJ,EAAYK,IAAI,SAE5BP,GAAW,OADb,CAIA,IAAMQ,EAAON,EAAYK,IAAI,QAC7B,GAAKC,EAAL,CAIA,IAAMC,EAAaC,EAAOC,KAAKH,EAAM,UACrC,IACEd,EAAWkB,KAAKC,MAAMJ,IACtB,MAAOK,GACPC,MACE,+IARFjB,GAAY,MAWb,IAEH,IAAMkB,EAAc,SAACC,GACnB,IAAMC,EAAU,IAAIC,eACpBD,EAAQE,KAAK,OAAQC,4HACrBH,EAAQI,iBAAiB,eAAgB,oBACzCJ,EAAQK,KAAKX,KAAKY,UAAUP,KAoD9B,OAAIlB,EAEA,cAAC,IAAD,CACE0B,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EACRC,MAAI,EACJC,OAAQ,aALV,SAOE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,MAAP,CAAaC,GAAG,gCAAhB,6CAQJlC,EAEA,cAAC,IAAD,CACE4B,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EACRC,MAAI,EACJC,OAAQ,aALV,SAOE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,MAAP,CAAaC,GAAG,gCAAhB,sDAQJpC,EAEA,cAAC,IAAD,CACE8B,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EACRC,MAAI,EACJC,OAAQ,aALV,SAOE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,MAAP,CAAaC,GAAG,gCAAhB,8EASN,qCACE,+BACE,sBACEC,IAAI,aACJC,KAAK,0EACLC,UAAU,0EACVC,YAAY,gBAGhB,cAAC,IAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MAAxC,SACE,cAAC,IAAD,UACE,eAAC,IAAOC,MAAR,CAAcN,KAAK,QAAnB,UACE,qBACEO,IAAI,GACJC,IAAI,8FACJC,MAAM,KACNC,OAAO,KACPC,UAAU,6BACT,IAPL,mCAaJ,sBAAMC,MAAO,CAAEC,cAAe,QAA9B,SACGrD,GAAW,cAAC,IAAD,CAAQsD,MAAOtD,EAASuD,SAAUtD,MAEhD,iCACE,cAAC,IAAD,CAAQ0C,GAAG,OAAOC,QAAQ,OAAOY,MAAM,SAAvC,SACE,cAAC,IAAD,UACE,cAAC,IAAOV,MAAR,CAAcN,KAAK,QAAQiB,QAtIjB,WAClB,IAAMhD,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAElD6C,EAAIjD,EAAYK,IAAI,KACpB6C,EAAIlD,EAAYK,IAAI,KACpB8C,EAAIzC,KAAKY,UAAU/B,GACnB6D,EAAY,UAAMH,EAAN,eAAcC,GAEhC,IAAKE,EAAeD,GAAGE,OAAS,IAAM,CAQpC,IAPA,IAAMC,EAAUC,OAAOC,KAAKjE,GAAS,GAC/BkE,EAAQ,CAAC,eAAGH,EAAU,KACtBI,EAAOH,OAAOI,QAAQpE,EAAQ+D,IAC9BM,EAAUC,KAAKC,KAAKX,EAAEE,OAAS,MAC/BU,EAAWF,KAAKG,MAAMN,EAAKL,OAASO,GACtCK,EAAe,EAEVC,EAAI,EAAGA,EAAIR,EAAKL,OAAQa,IAAK,CAC1B,IAANA,GAAWA,EAAIH,IAAa,IAE9BN,IADAQ,GACA,eAAyBX,EAAU,KAGrC,kBAAeI,EAAKQ,GAApB,GAAOC,EAAP,KAAUC,EAAV,KAEAX,EAAMQ,GAAN,eACGX,EADH,2BACkBG,EAAMQ,GAAcX,IADtC,kBACiDa,EAAIC,KAIvD1E,GAAa,GAEb,IAAK,IAAI2E,EAAI,EAAGA,EAAIZ,EAAMJ,OAAQgB,IAAK,CACrC,IAAMtD,EAAS,CACbuD,QAAQ,GAAD,OAAKlB,EAAL,eAAwB1C,KAAKY,UAClCmC,EAAMY,IADD,eAECf,EAFD,YAEkB,IAANe,EAAU,OAAS,KAExCvD,EAAYC,QAET,CACL,IAAMA,EAAS,CACbuD,QAAQ,GAAD,OAAKlB,EAAL,eAAwBD,IAEjCrC,EAAYC,GAEZrB,GAAa,KAyFP,sE,yDC/KZ,2DAIA6E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0047aadf.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container, Navbar, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { JsonEditor as Editor } from \"jsoneditor-react\";\nimport \"jsoneditor-react/es/editor.min.css\";\n\nconst App = () => {\n  const [jsonVal, setJsonVal] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [hasError, setHasError] = useState(false);\n  const [isSetup, setIsSetup] = useState(false);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const setup = queryParams.get(\"setup\");\n    if (setup) {\n      setIsSetup(true);\n      return;\n    }\n    const data = queryParams.get(\"data\");\n    if (!data) {\n      setHasError(true);\n      return;\n    }\n    const jsonString = Buffer.from(data, \"base64\");\n    try {\n      setJsonVal(JSON.parse(jsonString));\n    } catch (e) {\n      alert(\n        \"Failed to set get JSON info, please try reclicking the discord link. If this problem persists, please contact @Developers for support\"\n      );\n    }\n  }, []);\n\n  const sendRequest = (params) => {\n    const request = new XMLHttpRequest();\n    request.open(\"POST\", process.env.REACT_APP_WEBHOOK_URL);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(JSON.stringify(params));\n  };\n\n  const sendMessage = () => {\n    const queryParams = new URLSearchParams(window.location.search);\n\n    const f = queryParams.get(\"f\");\n    const i = queryParams.get(\"i\");\n    const t = JSON.stringify(jsonVal);\n    const staticParams = `${f} && ${i}`;\n\n    if ((staticParams + t).length > 2000) {\n      const mainKey = Object.keys(jsonVal)[0];\n      const jsons = [{ [mainKey]: {} }];\n      const vals = Object.entries(jsonVal[mainKey]);\n      const divisor = Math.ceil(t.length / 1800);\n      const interval = Math.floor(vals.length / divisor);\n      let messageCount = 0;\n\n      for (let j = 0; j < vals.length; j++) {\n        if (j !== 0 && j % interval === 0) {\n          messageCount++;\n          jsons[messageCount] = { [mainKey]: {} };\n        }\n\n        const [k, v] = vals[j];\n\n        jsons[messageCount] = {\n          [mainKey]: { ...jsons[messageCount][mainKey], [k]: v },\n        };\n      }\n\n      setIsLoading(true);\n\n      for (let z = 0; z < jsons.length; z++) {\n        const params = {\n          content: `${staticParams} && ${JSON.stringify(\n            jsons[z]\n          )} && ${mainKey} ${z === 0 ? \"&& 1\" : \"\"}`,\n        };\n        sendRequest(params);\n      }\n    } else {\n      const params = {\n        content: `${staticParams} && ${t}`,\n      };\n      sendRequest(params);\n\n      setIsLoading(true);\n    }\n  };\n\n  if (isSetup) {\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show\n        onHide={() => {}}\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            You are successfully setup!\n          </Modal.Title>\n        </Modal.Header>\n      </Modal>\n    );\n  }\n\n  if (hasError) {\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show\n        onHide={() => {}}\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Please click the link from the embed\n          </Modal.Title>\n        </Modal.Header>\n      </Modal>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show\n        onHide={() => {}}\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Sent your file to be uploaded, you may close your browser :)\n          </Modal.Title>\n        </Modal.Header>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <head>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n          integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n          crossOrigin=\"anonymous\"\n        />\n      </head>\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src=\"https://cdn.discordapp.com/icons/733117510420791358/a_2a2e9349029a56a1da08e999e0ac31e1.webp\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />{\" \"}\n            GCG Price Sheet Modifiers\n          </Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      <body style={{ paddingBottom: \"56px\" }}>\n        {jsonVal && <Editor value={jsonVal} onChange={setJsonVal} />}\n      </body>\n      <footer>\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"bottom\">\n          <Container>\n            <Navbar.Brand href=\"#home\" onClick={sendMessage}>\n              Click here to automatically upload this file\n            </Navbar.Brand>\n          </Container>\n        </Navbar>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}