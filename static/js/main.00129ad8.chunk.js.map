{"version":3,"sources":["App.js","index.js"],"names":["App","useState","jsonVal","setJsonVal","isLoading","setIsLoading","hasError","setHasError","isSetup","setIsSetup","useEffect","queryParams","URLSearchParams","window","location","search","get","data","jsonString","Buffer","from","JSON","parse","e","alert","size","centered","show","onHide","Header","Title","id","rel","href","integrity","crossOrigin","bg","variant","sticky","Brand","alt","src","width","height","className","style","paddingBottom","value","onChange","fixed","onClick","request","XMLHttpRequest","open","process","setRequestHeader","f","i","params","content","stringify","send","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAsJeA,IAhJH,WACV,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAExD,GADcJ,EAAYK,IAAI,SAE5BP,GAAW,OADb,CAIA,IAAMQ,EAAON,EAAYK,IAAI,QAC7B,GAAKC,EAAL,CAIA,IAAMC,EAAaC,EAAOC,KAAKH,EAAM,UACrC,IACEd,EAAWkB,KAAKC,MAAMJ,IACtB,MAAOK,GACPC,MACE,+IARFjB,GAAY,MAWb,IAkBH,OAAIC,EAEA,cAAC,IAAD,CACEiB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EACRC,MAAI,EACJC,OAAQ,aALV,SAOE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,MAAP,CAAaC,GAAG,gCAAhB,6CAQJzB,EAEA,cAAC,IAAD,CACEmB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EACRC,MAAI,EACJC,OAAQ,aALV,SAOE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,MAAP,CAAaC,GAAG,gCAAhB,sDAQJ3B,EAEA,cAAC,IAAD,CACEqB,KAAK,KACL,kBAAgB,gCAChBC,UAAQ,EACRC,MAAI,EACJC,OAAQ,aALV,SAOE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,MAAP,CAAaC,GAAG,gCAAhB,8EASN,qCACE,+BACE,sBACEC,IAAI,aACJC,KAAK,0EACLC,UAAU,0EACVC,YAAY,gBAGhB,cAAC,IAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MAAxC,SACE,cAAC,IAAD,UACE,eAAC,IAAOC,MAAR,CAAcN,KAAK,QAAnB,UACE,qBACEO,IAAI,GACJC,IAAI,8FACJC,MAAM,KACNC,OAAO,KACPC,UAAU,6BACT,IAPL,mCAaJ,sBAAMC,MAAO,CAAEC,cAAe,QAA9B,SACG5C,GACC,cAAC,IAAD,CACA6C,MAAO7C,EACP8C,SAAU7C,MAId,iCACE,cAAC,IAAD,CAAQiC,GAAG,OAAOC,QAAQ,OAAOY,MAAM,SAAvC,SACE,cAAC,IAAD,UACE,cAAC,IAAOV,MAAR,CAAcN,KAAK,QAAQiB,QA1GjB,WAClB,IAAMC,EAAU,IAAIC,eACpBD,EAAQE,KAAK,OAAQC,4HACrBH,EAAQI,iBAAiB,eAAgB,oBAEzC,IAAM5C,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAElDyC,EAAI7C,EAAYK,IAAI,KACpByC,EAAI9C,EAAYK,IAAI,KACpB0C,EAAS,CACbC,QAAQ,GAAD,OAAKH,EAAL,eAAaC,EAAb,eAAqBpC,KAAKuC,UAAU1D,KAE7CiD,EAAQU,KAAKxC,KAAKuC,UAAUF,IAC5BrD,GAAa,IA6FL,sE,yDC5IZ,2DAIAyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.00129ad8.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Container, Navbar, Modal } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { JsonEditor as Editor } from 'jsoneditor-react';\r\nimport 'jsoneditor-react/es/editor.min.css';\r\n\r\nconst App = () => {\r\n  const [jsonVal, setJsonVal] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [isSetup, setIsSetup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const setup = queryParams.get(\"setup\");\r\n    if (setup) {\r\n      setIsSetup(true);\r\n      return;\r\n    }\r\n    const data = queryParams.get(\"data\");\r\n    if (!data) {\r\n      setHasError(true);\r\n      return;\r\n    }\r\n    const jsonString = Buffer.from(data, \"base64\");\r\n    try {\r\n      setJsonVal(JSON.parse(jsonString));\r\n    } catch (e) {\r\n      alert(\r\n        \"Failed to set get JSON info, please try reclicking the discord link. If this problem persists, please contact @Developers for support\"\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    const request = new XMLHttpRequest();\r\n    request.open(\"POST\", process.env.REACT_APP_WEBHOOK_URL);\r\n    request.setRequestHeader(\"Content-type\", \"application/json\");\r\n\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n\r\n    const f = queryParams.get(\"f\");\r\n    const i = queryParams.get(\"i\");\r\n    const params = {\r\n      content: `${f} && ${i} && ${JSON.stringify(jsonVal)}`,\r\n    };\r\n    request.send(JSON.stringify(params));\r\n    setIsLoading(true);\r\n  };\r\n\r\n  if (isSetup) {\r\n    return (\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show\r\n        onHide={() => {}}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            You are successfully setup!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (hasError) {\r\n    return (\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show\r\n        onHide={() => {}}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Please click the link from the embed\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show\r\n        onHide={() => {}}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Sent your file to be uploaded, you may close your browser :)\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <head>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n          integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      </head>\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              alt=\"\"\r\n              src=\"https://cdn.discordapp.com/icons/733117510420791358/a_2a2e9349029a56a1da08e999e0ac31e1.webp\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            GCG Price Sheet Modifiers\r\n          </Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <body style={{ paddingBottom: \"56px\" }}>\r\n        {jsonVal && (\r\n          <Editor\r\n          value={jsonVal}\r\n          onChange={setJsonVal}\r\n      />\r\n        )}\r\n      </body>\r\n      <footer>\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"bottom\">\r\n          <Container>\r\n            <Navbar.Brand href=\"#home\" onClick={sendMessage}>\r\n              Click here to automatically upload this file\r\n            </Navbar.Brand>\r\n          </Container>\r\n        </Navbar>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}